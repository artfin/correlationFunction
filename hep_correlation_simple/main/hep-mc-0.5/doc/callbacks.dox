namespace hep
{

/**

\defgroup callbacks Callback Functions

\brief Obtaining the results for each iteration as soon as they are available

VEGAS and the adaptive multi channel integrator are iterative algorithms, i.e.
they produce intermediate results after each completed iteration. One usually
wants to monitor these, e.g. to ensure results are converging. The callback
mechanism lets the user do exactly this, by setting an appropriate callback
function, e.g. for VEGAS via \ref vegas_callback. This callback function is then
called after each completed iteration.

The function must accept a vector of the results, e.g. \ref vegas_result, in the
case of VEGAS, that will contain the results of every iteration performed so
far. Using these results the function must decide if the integrator should
proceed with the remaining iterations (in that case the function returns `true`)
or if the integrator should stop and discard the remaining iterations (return
`false`). In the case of MPI-parallized routines the MPI callbacks must also
accept the MPI communicator as its first argument.

This library comes with two predefined callback functions for ach integrator,

  - a `_default_callback` function that is set by default and does nothing and
  - a `_verbose_callback` function that prints the result of the recently
	completed iteration and the cumulative result (using 
	\ref cumulative_result0) of all iterations and the corresponding chi-square
    per degree of freedom (using \ref chi_square_dof0).

An example on how to use the return value to stop after a certain precision is
reached is shown in \ref vegas_stop_after_precision.cpp.

*/

}
